server:
  port: 8040

spring:
  application:
    name: gateway

  zipkin:
    base-url: http://127.0.0.1:9411/
  sleuth:
    sampler:
      #抽样率：默认是0.1，表示90%的数据都会丢弃，这里我们测试方便用了1.0
      probability: 1.0

  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        # 指定namespace
        namespace: 68dc03c0-048d-48c4-81e3-b7d1b34556e5

    gateway:
      discovery:
        locator:
          #让gateway通过服务发现组件找到其他的微服务
          enabled: true
      routes:
        - id: user_route
          uri: lb://user-center
          predicates:
            - Path=/hi/**
        - id: content_route
          uri: lb://content-center
          predicates:
            - Path=/hi2/**,/admin/shares,/hifeign/**
#      routes:
#        - id: after_route
#          uri: lb://user-center
#          predicates:
#            # 当且仅当请求时的时间After配置的时间时，才会转发到用户微服务
#            # 目前配置不会进该路由配置，所以返回404
#            # 将时间改成 < now的时间，则访问localhost:8040/** -> user-center/**
#            # eg. 访问http://localhost:8040/users/1 -> user-center/users/1
##            - After=2030-01-20T17:42:47.789-07:00[America/Denver]
#            - TimeBetween=上午9:00,下午11:00
#          filters:
##            - AddRequestHeader=X-Request-Foo, Bar
##            - PreLog=a,b
#            - name: RequestRateLimiter
#              args:
#                # 令牌桶每秒填充平均速率
#                redis-rate-limiter.replenishRate: 1
#                # 令牌桶的上限
#                redis-rate-limiter.burstCapacity: 2
#                # 使用SpEL表达式从Spring容器中获取Bean对象
#                key-resolver: "#{@pathKeyResolver}"
  redis:
    host: 127.0.0.1
    port: 6379
    password: 1323!Q@#EMSD%$^
    database: 0
agement:
  endpoints:
    web:
      exposure:
        include: '*'

  endpoint:
    health:
      show-details: always